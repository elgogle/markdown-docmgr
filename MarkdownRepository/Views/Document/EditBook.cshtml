@using MarkdownRepository.Lib

@{
    ViewBag.Title = "修改书籍";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var documentId = 0;
    var uploadId = Guid.NewGuid().ToString();
}
@model MarkdownRepository.Models.BookVm


@section style{
<link href="~/javascripts/jstree/3.3.8/themes/default/style.min.css" rel="stylesheet">

@System.Web.Optimization.Styles.Render("~/css/editor.md")

<link href="~/javascripts/layer-v3.1.1/layer/theme/default/layer.css" rel="stylesheet" />
<link href="~/javascripts/bootstrap-switch/css/bootstrap3/bootstrap-switch.min.css" rel="stylesheet" />

<style>

    #layui-layer-shade1 {
        z-index: 999 !important;
    }

    .toggle-sidebar{
         justify-content: flex-end;
         cursor: pointer;
    }

    #main{
        display: grid;
        grid-template-rows: auto 1fr;
    }
    #content_body{
        display: grid;
        grid-template-columns: minmax(50px, 260px) 1fr;
    }
    #content_toc{
        height: 705px;
        overflow: auto;
        background-color: #fafafa;
    }
    .container{
        width: auto !important;
    }
</style>
}

<input type="hidden" id="book_id" value="@Model.Book.id" />


<div>
    <div id="main">

        <div id="content_body">

            <div id="content_toc">
                <div class="toolbar">
                    <div class="book-ins">
                        <h5>
                            <span>书名:</span><span id="label_book_name">@Model.Book.name</span>
                        </h5>
                        <p style="font-size:0.6em; text-overflow: ellipsis; word-wrap: break-word;">
                            <span style="">简介: </span><span id="label_book_desc">@Model.Book.description.GetShortDesc()</span>
                        </p>
                    </div>
                    <div>
                        <button id="btn_edit_book_title" class="btn btn-default btn-xs">
                            <i class="glyphicon glyphicon-pencil"></i> 更新书籍名与简介
                        </button>
                        <button id="btn_exit_edit" class="btn btn-default btn-xs">
                            退出编辑
                        </button>
                    </div>
                </div>
                <div class="">
                    <div class="catalog-body">
                        <div id="toc"></div>
                    </div>
                </div>
            </div>

            <div class="">
                <div class="">
                    <div class="">
                        <div class="article-head">
                            <div>
                                <div class="input-group">
                                    <span class="input-group-addon" style="width:100px;">完整目录: </span>
                                    <span class="input-group-addon" style="width:99%;text-align:left"
                                          id="lable_current_dir_path"></span>
                                </div>
                            </div>

                            <div>
                                <div class="input-group">
                                    <span class="input-group-addon">当前目录: </span>
                                    <input type="text" class="form-control" id="current_directory" value="">
                                    <span class="input-group-btn">
                                        <button id="btn_new_directory" class="btn btn-default"
                                                type="button">
                                            新增同级目录
                                        </button>
                                    </span>
                                    <span class="input-group-btn">
                                        <button id="btn_modify_directory" class="btn btn-default"
                                                type="button">
                                            修改当前目录
                                        </button>
                                    </span>
                                    <span class="input-group-btn">
                                        <button id="btn_del_directory" class="btn btn-default"
                                                type="button">
                                            删除当前目录
                                        </button>
                                    </span>

                                    <input type="hidden" id="parent_directory_id" value="" />
                                    <input type="hidden" id="current_directory_id" value="" />

                                    <input type="text" class="form-control" id="new_sub_directory" value="">
                                    <span class="input-group-btn">
                                        <button id="btn_new_sub_directory" class="btn btn-default"
                                                type="button">
                                            创建子目录
                                        </button>
                                    </span>

                                    <span class="input-group-btn">
                                        <button id="btn_save_article" class="btn btn-default"
                                                type="button">
                                            保存文章
                                        </button>
                                    </span>
                                </div>
                            </div>
                        </div>


                        <div class="doc">
                            <div id="mkEditor">
                                <textarea id="md_content" style="display:none;"></textarea>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<div id="diag_edit_book_info" style="display:none">
    <div class="col-md-6">
        <div class="form-group">
            <label>标题</label>
            <input type="text" class="form-control" name="name" id="txt_book_name" placeholder="书名"
                value="@Model.Book.name">
        </div>

        <div class="form-group">
            <label>描述</label>
            <textarea rows="3" class="form-control" id="txt_book_desc" name="description" style="height: 90px"
                placeholder="书的描述">@Model.Book.description</textarea>
            <p class="text">描述信息不超过500个字符</p>
        </div>

        <div class="form-group">
            <label>分类</label>
            <input type="text" class="form-control" id="txt_book_category" name="category" placeholder="书籍分类"
                value="@Model.Book.category">
            <p class="text">多个分类请用“;”分割</p>
        </div>

        <div class="form-group">
            <label>是否公开</label>
            <input type="checkbox" class="switch" id="chk_book_is_public" name="is_public"
                @(Model.Book.is_public==MarkdownRepository.Models.DocumentAccess.PUBLIC?"checked":"")>
        </div>

        <div class="form-group">
            <button type="submit" id="btn_save_book_info" class="btn btn-success"
                data-loading-text="保存中...">保存修改</button>
        </div>
    </div>
</div>

@section scripts{
<script src="~/javascripts/jstree/3.3.8/jstree.min.js"></script>

@System.Web.Optimization.Scripts.Render("~/script/editor.md")

<script src="~/javascripts/layer-v3.1.1/layer/layer.js"></script>
<script src="~/javascripts/bootstrap-switch/js/bootstrap-switch.min.js"></script>

<script>
    function resizeLayout() {
        $("#content_toc").height(window.visualViewport.height - 70);
        window.editor.height(window.visualViewport.height - 140);
    }

    window.onresize = function () {
        resizeLayout();
    }

    $(document).ready(function () {
        var $currentDir = $("#current_directory"),
            $currentDirId = $("#current_directory_id"),
            $bookId = $("#book_id"),
            $lableCurrentDirPath = $("#lable_current_dir_path"),
            $parentDirId = $("#parent_directory_id"),
            $newSubDir = $("#new_sub_directory"),
            $mdContent = $("#md_content");

        // 在首次打开页面时，加载参数中的目录
        var openDirId = "@ViewBag.OpenDirId", opened = false;


        window.jsTree = $("#toc").jstree({
            'plugins': ["wholerow", "types", "dnd"],
            "types": {
                "default": {
                    "icon": false // 删除默认图标
                }
            },
            'core': {
                'check_callback': true,
                "multiple": false,
                'animation': 0,
                'data': function (obj, callback) {
                    var _this = this;
                    $.ajax({
                        url: '@Url.Action("GetBookDirectory")',
                        data: {
                            bookid: $bookId.val()
                        },
                        cache: false,
                        dataType: "json",
                    })
                        .success(function (res) {
                            callback.call(_this, res.data);
                            if (opened == false) {
                                opened = true;
                                setTimeout(function () {
                                    jsTree.jstree().deselect_all();
                                    jsTree.jstree().select_node([openDirId], false);
                                }, 500);
                            }
                        });
                }
            }
        }).on('select_node.jstree', function (node, selected) {
            $parentDirId.val(selected.node.parent);
            $currentDir.val(selected.node.text);
            $currentDirId.val(selected.node.id);
            $lableCurrentDirPath.text(getNodePath(selected.node.id));
            loadDocument(selected.node.id);
        }).on('move_node.jstree', function (e, data) {
            $.ajax({
                url: '@Url.Action("BookDirectoryMove")',
                data: {
                    bookId: $bookId.val(),
                    dirId: data.node.id,
                    seq: data.position,
                    oldSeq: data.old_position,
                    parentId: data.parent === '#' ? 0 : data.parent,
                    oldParentId: data.old_parent === '#' ? 0 : data.old_parent
                },
                cache: false,
                dataType: "json",
            })
            .success(function (res) { })
            .error(function () { });
        });

        $("#btn_exit_edit").on('click', function () {
            var dirId = $currentDirId.val();
            var bookId = $bookId.val();
            window.location.href = "@Url.Action("ShowBook")" + "?bookid=" + bookId + "&dirId=" + dirId;
        });

        $("#btn_modify_directory").on('click', function () {
            var dir = $currentDir.val();
            var dirId = $currentDirId.val();
            var bookId = $bookId.val();
            var parentDirId = ($parentDirId.val() || '#');
            parentDirId = parentDirId == "#" ? "0" : parentDirId;

            if (dirId) {
                //update
                $.post('@Url.Action("UpdateBookDirectory", "Document")', {
                    bookid: bookId,
                    directoryid: dirId,
                    title: dir,
                },
                    function (res) {
                        // 刷新目录树
                        window.jsTree.jstree().refresh();
                    })
            }
        });

        $("#btn_new_directory").on('click', function () {
            var dir = $currentDir.val();
            var dirId = $currentDirId.val();
            var bookId = $bookId.val();
            var newSubDir = $newSubDir.val();
            var parentDirId = ($parentDirId.val() || '#');
            parentDirId = parentDirId == "#" ? "0" : parentDirId;

            if (dir) {
                $.post('@Url.Action("CreateBookDirectory", "Document")', {
                    bookid: bookId,
                    parentId: parentDirId,
                    title: dir,
                },
                    function (res) {
                        // 刷新目录树
                        window.jsTree.jstree().refresh();
                    })
            }
        });

        $("#btn_new_sub_directory").on('click', function () {
            var dir = $currentDir.val();
            var dirId = $currentDirId.val();
            var bookId = $bookId.val();
            var newSubDir = $newSubDir.val();
            var parentDirId = ($parentDirId.val() || '#');
            parentDirId = parentDirId == "#" ? "0" : parentDirId;

            if (newSubDir) {
                //create
                $.post('@Url.Action("CreateBookDirectory", "Document")', {
                    bookId: bookId,
                    title: newSubDir,
                    parentId: dirId,
                    documentId: 0
                },
                    function (res) {
                        $newSubDir.val('');
                        // 刷新目录树
                        window.jsTree.jstree().refresh();
                    });
            }
        });

        $("#btn_del_directory").on('click', function () {
            var dir = $currentDir.val();
            var dirId = $currentDirId.val();
            var bookId = $bookId.val();
            var newSubDir = $newSubDir.val();
            var parentDirId = ($parentDirId.val() || '#');
            parentDirId = parentDirId == "#" ? "0" : parentDirId;

            if (dirId) {
                if (confirm("确认要删除该目录吗？提醒：删除目录会连同关联的文章一并删除")) {
                    //delete
                    $.post('@Url.Action("DeleteBookDirectory", "Document")', {
                        bookDirecotryId: dirId
                    },
                        function (res) {
                            if (res.isSuccess) {
                                $lableCurrentDirPath.val('');
                                $currentDir.val('');
                                $currentDirId.val('');
                                $parentDirId.val('');

                                // 刷新目录树
                                window.jsTree.jstree().refresh();
                                setTimeout(function () {
                                    if (parentDirId) {
                                        // 选择父目录
                                        jsTree.jstree().deselect_all();
                                        jsTree.jstree().select_node([parentDirId], false);
                                    }
                                }, 500);
                            }
                        });
                }
            }
        });


        $("input.switch").bootstrapSwitch({
            onText: '公开',
            offText: '不公开',
            size: 'mini',
        });

        $("#btn_edit_book_title").on('click', function () {
            window.diagEditBookInfoIndex = layer.open({
                type: 1,
                title: "修改书籍名称及简介",
                closeBtn: 1,
                moveType: 1,
                shade: 0,
                area: '516px',
                skin: 'layui-layer-rim', //加上边框
                content: $('#diag_edit_book_info')
            });
        });

        $("#btn_save_book_info").on('click', function () {
            var bookName = $("#txt_book_name").val();
            var bookDesc = $("#txt_book_desc").val();
            var bookCategory = $("#txt_book_category").val();
            var access = $("#chk_book_is_public").is(':checked') ? 1 : 0;

            $.post('@Url.Action("UpdateBook", "Document")', {
                bookid: $bookId.val(),
                name: bookName,
                description: bookDesc,
                category: bookCategory,
                access: access
            },
                function (res) {
                    if (res.isSuccess) {
                        layer.close(diagEditBookInfoIndex);
                        $("#label_book_name").text(bookName);
                        $("#label_book_desc").text(bookDesc);
                    } else {
                        messageAlert("保存失败，请稍后重试");
                    }
                })
        });

        function messageAlert(message) {
            layer.alert(message, {
                skin: 'layui-layer-lan',
                closeBtn: 0,
                anim: 0
            });
        }

        function getNodePath(currentNodeId) {
            var root = "";
            if (currentNodeId) {
                var p = jsTree.jstree().get_path(currentNodeId);
                if (p) {
                    if (p instanceof Array) {
                        root = p.join('/');
                    } else if (p instanceof String) {
                        root = p;
                    }
                }
            }

            return root;
        }

        function loadDocument(directoryid) {
            $.ajax({
                url: '@Url.Action("GetDocument")',
                dataType: "json",
                data: {
                    directoryid: directoryid
                },
                cache: false,
            })
                .success(function (res) {
                    if (res.isSuccess && res.data) {
                        editor.setValue(res.data.content);
                    } else {
                        //TODO: alert error
                        editor.setValue('');
                    }
                })
                .error(function () { })
                .complete(function () { });
        }

        window.editor = editormd("mkEditor", {
            //width: "100%",
            //height: "100%",
            saveHTMLToTextarea: true,
            autoLoadModules: false,
            imageUpload: true,
            imageFormats: ["jpg", "jpeg", "gif", "png", "bmp", "webp"],
            imageUploadURL: '@Url.Action("UploadImage", "Document", new { uploadId = uploadId })',
            pluginPath: '@Url.Content("~/editor.md/plugins/")',
            tex: true,
            flowChart: true,
            sequenceDiagram: true,
            taskList: true,
            syncScrolling: true,
            toolbarIcons: function () {
                return ['undo', 'redo', '|',
                    'bold', 'del', 'italic', 'quote', 'ucwords', 'uppercase', 'lowercase', '|',
                    'h1', 'h2', 'h3', 'h4', 'h5', 'h6', '|',
                    'list-ul', 'list-ol', 'hr', 'table', 'pasteTable', '|',
                    'link', 'reference-link', 'image', 'code', 'preformatted-text', 'code-block', 'datetime', 'emoji', 'html-entities', 'pagebreak', '|',
                    'goto-line', 'watch', 'preview', 'fullscreen', 'clear', 'search', '|'
                ];
            },
            toolbarIconsClass: {
                pasteTable: "fa-clipboard"
            },
            toolbarIconTexts: {
                pasteTable: "粘贴表格"
            },
            lang: {
                toolbar: {
                    pasteTable: "粘贴表格"
                }
            },
            toolbarHandlers: {
                /**
                * @@param {Object}      cm         CodeMirror对象
                * @@param {Object}      icon       图标按钮jQuery元素对象
                * @@param {Object}      cursor     CodeMirror的光标对象，可获取光标所在行和位置
                * @@param {String}      selection  编辑器选中的文本
                */
                pasteTable: function (cm, icon, cursor, selection) {
                    navigator.clipboard.readText().then(function (copiedText) {
                        var text = copiedText;
                        var tab = '\t';
                        var line = '\r\n';
                        var delimeter = '|';

                        var preLineTabs = 0;
                        var totalRows = 0;
                        var isTable = true;
                        var tableContent = '|';
                        var nextIsNewLine = false;

                        if (text) {
                            var a = text.split(line);
                            for (var i = 0; i < a.length; i++) {
                                var s = a[i];
                                if (i == (a.length - 1) && !s) continue;

                                if (nextIsNewLine) {
                                    tableContent += delimeter;
                                    nextIsNewLine = false;
                                }

                                if (s.indexOf(tab) > -1) {
                                    // 包含有制表
                                    totalRows++;
                                    var t = s.split(tab);
                                    var thisLineTabs = 0;
                                    for (var j = 0; j < t.length; j++) {
                                        tableContent += (t[j] ? t[j] : '&nbsp;') + delimeter;
                                        thisLineTabs++;
                                    }
                                    tableContent += line; //新起一行开始
                                    nextIsNewLine = true;

                                    if (totalRows > 1 && thisLineTabs !== preLineTabs) {
                                        isTable = false;
                                        break;
                                    }

                                    preLineTabs = thisLineTabs;
                                } else {
                                    tableContent += (s ? s : '-') + '<br/>';
                                }
                            }
                        }

                        if (totalRows > 1 && isTable) {
                            var tabTitleRow = delimeter;
                            for (var i = 0; i < preLineTabs; i++) {
                                tabTitleRow += '  ' + i + '  ' + delimeter;
                            }
                            tabTitleRow += line + delimeter;
                            for (var i = 0; i < preLineTabs; i++) {
                                tabTitleRow += '-----' + delimeter;
                            }

                            tabTitleRow += line;

                            editor.insertValue(tabTitleRow + tableContent);
                            ev.preventDefault();
                        }
                    });
                }
            }
        });


        $("#mkEditor").on('paste', function (ev) {
            var data = event.clipboardData;
            var items = (event.clipboardData || event.originalEvent.clipboardData).items;
            for (var index in items) {
                var item = items[index];
                if (item.kind === 'file') {
                    var blob = item.getAsFile();
                    var reader = new FileReader();
                    reader.onload = function (event) {
                        var base64 = event.target.result;

                        //ajax上传图片
                        $.post('@Url.Action("UploadImageByBase64", "Document")', {
                            base64Content: base64,
                            uploadId: '@uploadId'
                        }, function (ret) {
                            if (ret.success === 1) {
                                //新一行的图片显示
                                editor.insertValue("\n![](" + ret.url + ")");
                            } else {
                                console.log(ret.message);
                            }
                        });
                    }

                    reader.readAsDataURL(blob);
                }
            }
        });

        $("#btn_save_article").on('click', function () {
            var currentDir = $("#current_directory_id").val();

            if (currentDir) {
                $.post('@Url.Action("CreateOrUpdateBookArticle", "Document")', {
                    content: $("#mkEditor > textarea").val(),
                    title: '',
                    directoryid: $("#current_directory_id").val(),
                    uploadId: '@uploadId'
                },
                    function (res) {
                        if (res.isSuccess) {
                            layer.alert("保存成功", {
                                skin: 'layui-layer-lan',
                                closeBtn: 0,
                                anim: 0,
                                time: 800
                            });
                        } else {
                            messageAlert("保存失败，错误:" + res.message);
                        }
                    });
            } else {
                messageAlert("请先选定文章目录");
            }

            return false;
        });

        $(document).on('keydown', function (e) {
            var ctrlKey = e.ctrlKey || e.metaKey;
            if (ctrlKey) {
                var keyCode = e.keyCode || e.which || e.charCode;
                // ctrl+s
                if (ctrlKey && keyCode == 83) {
                    $('#btn_save_article').trigger('click');
                    e.preventDefault();
                    return false;
                }
            }
        });

        resizeLayout();
    });
</script>
}