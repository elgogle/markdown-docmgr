@using MarkdownRepository.Lib
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model MarkdownRepository.Models.Document

<style>
    pre::before {
        content: 'select';
        position: relative;
        display: block;
        margin-top: -5px;
        text-align: center;
        float: right;
        color: white;
        background-color: rgba(0,0,0,0.75);
        padding: 0 5px;
        cursor: pointer;
        pointer-events: all;
    }

    pre {
        pointer-events: none;
    }

    .author-info{
	    font-size: 0.6em;
        color: gray;
        margin: 1.5em;
        padding: 0.3em;
        border-left-style: solid;
        border-left-width: thin;
        background-color: #f5f5f5;
    }
</style>

@if (Model.creator.Equals(User.Identity.Name.GetUserName(), StringComparison.InvariantCultureIgnoreCase))
{
<div class="pull-right" style="font-size:0.7em;" >
    <a href="@Url.Action("Create", new { id = Model.rowid })"><span class="glyphicon glyphicon-edit"></span> 修改</a>     
</div>
}

@if (TempData["RedirectReason"] == "Unauthorized")
{
    <b style="color:Red">You don't have permission to edit</b>
}

<h2 style="padding-left:0.3em;">@Model.title</h2>

<div class="author-info">
    <div>Creator: @AdAccount.GetUserNameById(Model.creator)</div>
    <div>Update Time: @Model.update_at</div>
</div>

<div id="md">
    <textarea style="display:none;">@Model.content</textarea>
</div>

@section style{
    @System.Web.Optimization.Styles.Render("~/css/editor.md")
}

@section scripts{

@System.Web.Optimization.Scripts.Render("~/script/editor.md")

<script>
    showMarkDown("md");

    $(document).ready(function () {
        function selectText(element) {
            var doc = document
				, text = element
				, range, selection
            ;
            if (doc.body.createTextRange) { //ms
                range = doc.body.createTextRange();
                range.moveToElementText(text);
                range.select();
            } else if (window.getSelection) { //all others
                selection = window.getSelection();
                range = doc.createRange();
                range.selectNodeContents(text);
                selection.removeAllRanges();
                selection.addRange(range);
            }
        }

        var pre = document.getElementsByTagName("pre");

        for (var i = 0; i < pre.length; i++) {
            pre[i].addEventListener('click', function () {
                selectText(this);
            });
        }

    });
</script>
}
