@using MarkdownRepository.Lib

@{    
    Layout = "~/Views/Shared/_BookLayout.cshtml";
}
@model MarkdownRepository.Models.BookVm


@section style{
    <link href="~/javascripts/jstree/3.3.8/themes/default/style.min.css" rel="stylesheet">

    @System.Web.Optimization.Styles.Render("~/css/editor.md")

    <style>

        /*内容*/
        .window-body{          
            margin-left: 280px;
            padding: 0 30px;
        }

        /*左边目录*/
        .sidebar{  
            top: 55px;          
            left: 0;
            position: fixed;
            width: 280px;
            border-right: 1px solid #ddd;
            background-color: #fafafa;            
            bottom: 0;
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
            transition: left 0.25s ease;
            overflow: auto;
        }

        /*左边目录*/
        .sidebar .sidebar-body .catalog-body ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        /*左边目录*/
        .sidebar .sidebar-body .catalog-body ul li {
            line-height: 30px;
            cursor: pointer;
            white-space: nowrap;
            width: 100%;
            overflow: hidden;
        }

        /*内容 TOC*/
        #toc_container {
            z-index: 999;
        }
        /*内容 TOC*/
        #toc_container ul {
            list-style-type: none;
            padding-left: 1em;
            white-space: nowrap;
        }
        /*内容 TOC*/
        #toc_container ul:first-child {
            padding-left: 0px !important;
        }
        /*内容 TOC*/
        #toc_container ul > li {
            padding-top: 3px;
            padding-bottom: 3px;
        }
        /*内容 TOC， TOC 在内容上方时*/
        .toc-integrate {
            position: relative;
            font-size: 0.75em;
            padding: 20px;
            background: #b1e8e7 !important;
            overflow:hidden;
        }
        div.toc-integrate::before{
            content: "目录"
        }
        /*内容 TOC， TOC 单独在右边*/
        .toc-absolute {
            position: fixed;
            right: 20px;
            border: gray solid 1px;
            border-radius: 7px;
            overflow: hidden;
            padding: 1em;
            width: 180px;
            font-size: 0.8em;
            max-height: calc(100% - 250px);
        }
        /*内容 TOC*/
        .toc-absolute:hover {
            overflow: auto;
        }        
        /*内容*/
        .doc{
            padding-top:1em;
        }
        
        /*隐藏左侧目录按钮*/
        #hide-sidebar{
            position:fixed;
            margin-left: -25px;
        }
        #hide-sidebar>span{
            color:lightgray;
            cursor: pointer;
        }

        /** 文章锚点点击时，偏移一定距离，因为顶部有导航占有一定高度 */
        a.reference-link::before {
            content: '';
            display: block;
            height: 50px;
            margin: -30px 0 0;
        }

        /*代码块，增加全选按钮*/
        pre::before {
            content: '全选';
            position: relative;
            display: block;
            margin-top: -5px;
            text-align: center;
            float: right;
            color: white;
            background-color: rgba(0, 0, 0, 0.75);
            padding: 0 5px;
            cursor: pointer;
            pointer-events: all;
        }

        pre {
            pointer-events: none;
        }
    </style>
}

<input type="hidden" id="book_id" value="@Model.Book.id" />

<div>
    <div id="main">
        <div class="window-container">
            <div id="doc-category" class="sidebar">
                <div class="toolbar">
                    <div class="book-ins">
                        <h5>
                            @Model.Book.name
                        </h5>
                        <span style="display:block; font-size:0.6em; text-overflow: ellipsis; word-wrap: break-word;">创建人: @AdAccount.GetUserNameById(Model.Book.creator)</span>
                        <span style="display:block; font-size:0.6em; text-overflow: ellipsis; word-wrap: break-word;">创建时间: @Model.Book.creat_at</span>   
                    </div>

                    <div>
                        @if (User.Identity.IsAuthenticated && Model.BookOwner.Any(t => t.user_id ==
                            User.Identity.Name.GetUserName() && t.is_owner))
                        {
                            <a href="@Url.Action("EditBook", new { id=Model.Book.id, dirId = ViewBag.CurrentDiretoryId })" class="btn btn-default btn-xs">
                                <i class="glyphicon glyphicon-edit"></i> 编辑
                            </a>
                        }
                    </div>
                </div>

                @*<div class="sidebar-header">
                        <div class="search-form">
                            <div class="ui small fluid icon input">
                                <input type="text" placeholder="请输入搜索关键词..."><i class="icon search"></i>
                            </div>
                        </div>
                    </div>*@
                <div class="sidebar-body">
                    <div class="catalog-body">
                        <div id="toc"></div>
                    </div>
                </div>
            </div>
            
            <div id="doc-body" class="window-body">
                <div id="hide-sidebar"><span class="glyphicon glyphicon-align-justify"></span></div>
                <div class="doc">

                    <div id="toc_container"></div>

                    <div id="md">
                        <textarea id="md_content" style="display:none;">
                            @if (ViewBag.Document != null)
                            {
                                @Html.Raw(ViewBag.Document.content)
                            }
                        </textarea>
                    </div>

                    <div id="paging_tool">
                        <input type="hidden" id="current_dir_id" value="@ViewBag.CurrentDiretoryId" />

                        @if (ViewBag.PreDirectoryId >= 0)
                        {
                            <div id="pre_page" class="pull-left">
                                @Html.ActionLink("上一章", "ShowBook", new
                                                        {
                                                            bookid = Model.Book.id,
                                                            dirId = ViewBag.PreDirectoryId
                                                        })
                            </div>
                        }

                        @if (ViewBag.NextDirectoryId >= 0)
                        {
                            <div id="next_page" class="pull-right">
                                @Html.ActionLink("下一章", "ShowBook", new
                                                          {
                                                              bookid = Model.Book.id,
                                                              dirId = ViewBag.NextDirectoryId
                                                          })
                            </div>
                        }

                    </div>

                    <div id="comments"></div>
                </div>
            </div>
        </div>
    </div>

</div>



@section scripts{
    <script src="~/javascripts/jstree/3.3.8/jstree.min.js"></script>

    @System.Web.Optimization.Scripts.Render("~/script/editor.md")


    <script>
    window.jumpToDirectory = '@(ViewBag.CurrentDiretoryId ?? 0)';

    $(document).ready(function () {
        $bookId = $("#book_id");
        $currentDirId = $("#current_dir_id");

        window.jsTree = $("#toc").jstree({
            'plugins': ["wholerow", "types"],
            "types": {
                "default": {
                    "icon": false // 删除默认图标
                }
            },
            'core': {
                'check_callback': true,
                "multiple": false,
                'animation': 0,
                'data': @Html.Raw(ViewBag.DirectoryJson)
            }
        }).on('select_node.jstree', function (node, selected) {
            var href = window.location.href;
            if (href.search(/dirId=/) >= 0) {
                window.location.href = href.replace(/dirId=\d*/, "dirId=" + selected.node.id);
            } else {
                if (href.indexOf("?") < 0) {
                    window.location.href = href + "?dirId=" + selected.node.id;
                } else {
                    window.location.href = href + "&dirId=" + selected.node.id;
                }
            }
        });

        showMarkDown("md", "#toc_container");

        function selectText(element) {
            var doc = document,
                text = element,
                range, selection;
            if (doc.body.createTextRange) { //ms
                range = doc.body.createTextRange();
                range.moveToElementText(text);
                range.select();
            } else if (window.getSelection) { //all others
                selection = window.getSelection();
                range = doc.createRange();
                range.selectNodeContents(text);
                selection.removeAllRanges();
                selection.addRange(range);
            }
        }

        var pre = document.getElementsByTagName("pre");

        for (var i = 0; i < pre.length; i++) {
            pre[i].addEventListener('click', function () {
                selectText(this);
            });
        }

        @if(ViewBag.Document != null && ViewBag.Document.content.Trim().Length > 0) {
            <text> $("#comments").show(); </text>
        }
        else {
            <text> $("#comments").hide(); </text>
        }

        // 当没有目录时，隐藏目录容器
        setTimeout(function () {
            if($("ul.markdown-toc-list").children().length === 0){
                $("#toc_container").hide();
            }
        }, 200);

        
        $("#hide-sidebar").on('click', function(){
            var $sidebar = $(".sidebar");
            $sidebar.toggle(0);
            resizeBody();
        });

                
        resizeBody();
        
        $(window).resize(function(){
            resizeBody();
        })

        function resizeBody(){
            debounce(function(){
                var $leftSidebar = $(".sidebar"),
                    $body = $("#doc-body"),
                    $main = $("#main"),
                    $toc = $("#toc_container"),
                    leftSidebarIsShow = $leftSidebar.is(':visible'),
                    leftSideWidth = 280,
                    rightSideWidth = 230,
                    docWidth = $main.width();

                if(leftSidebarIsShow){
                    $body.css({ "margin-left": leftSideWidth + "px" });
                    docWidth = docWidth - leftSideWidth;
                }else{
                    $body.css({ "margin-left": "0" });
                }

                if(docWidth <= 1000){
                    $toc.addClass('toc-integrate');
                    $toc.removeClass('toc-absolute');
                    $body.css({ "margin-right": "0" });
                }else{
                    $toc.addClass('toc-absolute');
                    $toc.removeClass('toc-integrate');
                    $body.css({ "margin-right": rightSideWidth + "px" });
                }
            }, 50);
        }

        function hashCode(s){
            return s.split("").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);              
        }

        function debounce(func,wait) {
            var key = hashCode(func.toString());
            
            if(!window.timeout) window.timeout = {};

            if (window.timeout[key]) clearTimeout(window.timeout[key]);
                
            window.timeout[key] = setTimeout(() => {
                func();
            }, wait);            
        }
    });

    </script>

    <link href="//192.168.13.119/web-comment/CSS/comment.css" rel="stylesheet" />
    <script src="//192.168.13.119/web-comment/Script/comment.js"></script>
    <script>
    (function () {

        Comments({
            node: "#comments",
            articleId: @(ViewBag.Document != null ? ViewBag.Document.rowid : 0),
            userName: "@User.Identity.Name.GetUserName()",
            apiUrl: "http://192.168.13.119/web-comment",
            emailIsEnabled: true,
            articleTitle: "@(ViewBag.Document == null ? "" :ViewBag.Document.title)",
            articleWriter: "@(ViewBag.Document == null ? "" : ViewBag.Document.creator)"
        });
    })();
    </script>

}