@using PagedList.Mvc
@using MarkdownRepository.Lib
@{
    ViewBag.Title = "全部书籍";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model  PagedList.IPagedList<MarkdownRepository.Models.Book>


@section style{
    <style>
        .search-box {
            margin-top: 2em;
        }

        .search-box .form-group {
            width: 75%;
        }

        .search-box .form-group input {
            width: 100%;
        }

        .search-list {
            margin: 0.8em 0 0.7em 1em;
            list-style: none;
            padding: 0.5em;
            border-radius: 5px;
            border: #ddd solid 1px;
        }

        .search-list.even{
            background-color: #eee;
        }

        .search-list.odd{
            background-color: #f9f9f9;
        }

        .update-time {
            font-size: 0.6em;
            color: gray;
            font-family: sans-serif;
            text-overflow: ellipsis;
            overflow: hidden;
        }

        .category {
            color: #337ab7;
            font-size: 0.7em;
        }

        .books-container{
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
        }

        li.search-list{
            box-shadow: 4px -2px 3px #e5e5e5;
            display: grid;
            grid-template-rows: auto 20px 20px 20px;
            max-width: 200px;
        }
    </style>
}


<div>
    <div>
       @using (Html.BeginForm("SearchBook", "Document", FormMethod.Get, new { @class = "form-inline col-sm-offset-2 search-box", @role = "form" }))
       {
        <div class="form-group">
            @Html.TextBox("searchText", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "书籍名或简介" })
        </div>
        <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-search"></span>搜索书籍</button>
       }
    </div>

    <div style="min-height:600px;">
        <ul class="books-container" style="padding-left:0">
            @if (Model != null && Model.Count > 0)
            {
                bool isEven = true;
                foreach (var item in Model)
                {
                    isEven = !isEven;

                    <li class="search-list @(isEven?"even":"odd")">
                        <div>
                            <a href="@Url.Action("ShowBook", new { bookid = item.id })">
                                <h4>@Html.Raw(item.name)</h4>
                                <p style="text-overflow: ellipsis; word-wrap: break-word; font-size: 0.7em; color: gray; margin: 1em;">
                                    简介: @Html.Raw(item.description)
                                </p>
                            </a>
                        </div>

                        <div class="category">
                            分类: @Html.Raw(item.category)
                        </div>

                        <div class="update-time">
                            当前作者: @AdAccount.GetUserNameById(item.creator)
                        </div>

                        <div class="update-time">
                            更新时间: @item.update_at
                        </div>
                    </li>
                }
            }
        </ul>

        @if (Model != null && Model.Count > 0)
        {
            <!-- 分页 -->
            <text> Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</text>

            @Html.PagedListPager(Model, page => Url.Action("AllBooks", new { page }))
        }
    </div>

</div>